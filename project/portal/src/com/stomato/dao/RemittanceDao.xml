<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stomato.dao.RemittanceDao">

	<resultMap type="com.stomato.domain.Remittance" id="remittance"> 
		<result property="id" column="id" />
		<result property="uid" column="uid" />
		<result property="money" column="money"/>
		<result property="bankAccount" column="bank_account"/>
		<result property="bankName" column="bank_name"/>
		<result property="bankCard" column="bank_card"/>
		<result property="status" column="status"/>
		<result property="remark" column="remark"/>
		<result property="remittanceTime" column="remittance_time"/>
		<result property="createTime" column="create_time"/>
		<result property="lastUpdateTime" column="last_update_time"/>
	</resultMap>

	<insert id="addRemittance" parameterType="com.stomato.domain.Remittance">
		INSERT INTO t_remittance (
			uid,
			money,
			bank_account,
			bank_name,
			bank_card,
			create_time,
			last_update_time
		)
		VALUES
			(#{uid}, 
			#{money}, 
			#{bankAccount}, 
			#{bankName}, 
			#{bankCard},
			now(), 
			now())
	</insert>
	<update id="remittanceComplete" parameterType="int">
		update t_remittance set status=1 where id=#{id}
	</update>
	<select id="getRemittance" parameterType="int" resultMap="remittance" >
		select id,uid,money,bank_account,bank_name,bank_card,status,remark,create_time,remittance_time,last_update_time from t_remittance where id=#{id}
	</select>
	<select id="getRemittanceListByApplyStatus" parameterType="int" resultMap="remittance" >
		select id,uid,money,bank_account,bank_name,bank_card,status,remark,create_time,remittance_time,last_update_time from t_remittance where uid=#{uid} and status=0
	</select>
	<select id="getRemittanceListByUser" parameterType="com.stomato.form.RemittanceFormParam" resultMap="remittance" >
		select id,uid,money,bank_account,bank_name,bank_card,status,remark,create_time,remittance_time,last_update_time from t_remittance where uid=#{uid} 
		<if test="startDate != null">
            and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		order by id asc 
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>
	<select id="getRemittanceList" parameterType="com.stomato.form.RemittanceFormParam" resultMap="remittance" >
		select id,uid,money,bank_account,bank_name,bank_card,status,remark,create_time,remittance_time,last_update_time from t_remittance 
		where 1=1
		<if test="startDate != null">
            and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		order by status,create_time asc 
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>
	<select id="getRemittanceCount" parameterType="com.stomato.form.RemittanceFormParam" resultType="int" >
		select count(1) from t_remittance 
		where 1=1
		<if test="uid != null">
			AND uid=#{uid}
		</if>
		<if test="startDate != null">
            and create_time between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
	</select>
</mapper>