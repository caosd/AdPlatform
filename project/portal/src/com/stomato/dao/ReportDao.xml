<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stomato.dao.ReportDao">

	<resultMap type="com.stomato.domain.ReportResult" id="report">
		<result property="idate" column="idate"/>
		<result property="value" column="kpi_value"/>
	</resultMap>
	
	<select id="getDailyReport" parameterType="com.stomato.form.ReportFormParam" resultType="map">
		select a.idate, sum(case when a.kpi_code = 'sm_total_users' then a.kpi_value else 0 end) as totalUsers,
			 sum(case when a.kpi_code = 'sm_push_times' then a.kpi_value else 0 end) as pushTimes,
			 sum(case when a.kpi_code = 'sm_display_times' then a.kpi_value else 0 end) as displayTimes,
			 sum(case when a.kpi_code = 'sm_new_users' then a.kpi_value else 0 end) as newUsers,
			 sum(case when a.kpi_code = 'sm_online_users' then a.kpi_value else 0 end) as onlineUsers,
			 sum(case when a.kpi_code = 'sm_conversion_rate' then a.kpi_value else 0 end) as conversionRate,
			 sum(case when a.kpi_code = 'sm_fill_rate' then a.kpi_value else 0 end) as fillRate,
			 sum(case when a.kpi_code = 'sm_money_pushes' then a.kpi_value else 0 end) as moneyPushes,
			 sum(case when a.kpi_code = 'sm_money_advertising' then a.kpi_value else 0 end) as moneyAdvertising,
			 sum(case when a.kpi_code = 'sm_app_opens' then a.kpi_value else 0 end) as appOpens
		from t_report_daily as a inner join t_apps as b on a.app_id = b.id 
		where a.uid=#{uid}
	    <if test="appId != 0">
	     		AND app_id = #{appId}
	    </if>
		<if test="startDate != null">
            and a.idate between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		group by a.idate,a.app_id 
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>
	<select id="getAccountsReport" parameterType="com.stomato.form.ReportFormParam" resultType="map">
		select a.idate, b.name,
			 sum(case when a.kpi_code = 'sm_total_users' then a.kpi_value else 0 end) as totalUsers,
			 sum(case when a.kpi_code = 'sm_push_times' then a.kpi_value else 0 end) as pushTimes,
			 sum(case when a.kpi_code = 'sm_display_times' then a.kpi_value else 0 end) as displayTimes,
			 sum(case when a.kpi_code = 'sm_new_users' then a.kpi_value else 0 end) as newUsers,
			 sum(case when a.kpi_code = 'sm_online_users' then a.kpi_value else 0 end) as onlineUsers,
			 sum(case when a.kpi_code = 'sm_conversion_rate' then a.kpi_value else 0 end) as conversionRate,
			 sum(case when a.kpi_code = 'sm_fill_rate' then a.kpi_value else 0 end) as fillRate,
			 sum(case when a.kpi_code = 'sm_money_pushes' then a.kpi_value else 0 end) as moneyPushes,
			 sum(case when a.kpi_code = 'sm_money_advertising' then a.kpi_value else 0 end) as moneyAdvertising,
			 sum(case when a.kpi_code = 'sm_app_opens' then a.kpi_value else 0 end) as appOpens
		from t_report_daily as a inner join t_apps as b on a.app_id = b.id 
		where a.uid=#{uid}
		<if test="appId != 0">
	     		AND app_id = #{appId}
	    </if>
		<if test="startDate != null">
            and a.idate between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		group by a.idate,a.app_id 
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>
	<select id="getDailyReportCount" parameterType="com.stomato.form.ReportFormParam" resultType="int">
		select count(1) from (select 1
		from t_report_daily as a inner join t_apps as b on a.app_id = b.id 
		where a.uid=#{uid}
		<if test="appId != 0">
	     	and app_id = #{appId}
	    </if>
		<if test="startDate != null">
            and a.idate between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		 group by a.idate,a.app_id) as report
	</select>
	
	<select id="getMonthlyReport" parameterType="com.stomato.form.ReportFormParam" resultType="map">
		select a.idate, sum(case when a.kpi_code = 'sm_total_users' then a.kpi_value else 0 end) as totaLusers,
			 sum(case when a.kpi_code = 'sm_push_times' then a.kpi_value else 0 end) as pushTimes,
			 sum(case when a.kpi_code = 'sm_display_times' then a.kpi_value else 0 end) as displayTimes,
			 sum(case when a.kpi_code = 'sm_new_users' then a.kpi_value else 0 end) as newUsers,
			 sum(case when a.kpi_code = 'sm_online_users' then a.kpi_value else 0 end) as onlineUsers,
			 sum(case when a.kpi_code = 'sm_conversion_rate' then a.kpi_value else 0 end) as conversionRate,
			 sum(case when a.kpi_code = 'sm_fill_rate' then a.kpi_value else 0 end) as fillRate,
			 sum(case when a.kpi_code = 'sm_money_pushes' then a.kpi_value else 0 end) as moneyPushes,
			 sum(case when a.kpi_code = 'sm_money_advertising' then a.kpi_value else 0 end) as moneyAdvertising,
			 sum(case when a.kpi_code = 'sm_app_opens' then a.kpi_value else 0 end) as appOpens
		from t_report_monthly as a inner join t_apps as b on a.app_id = b.id 
		where a.uid=#{uid}
		<if test="appId != 0">
	     		AND app_id = #{appId}
	    </if>
		<if test="startDate != null">
            and a.idate between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		group by a.idate,a.app_id 
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>
	
	<select id="getMonthlyReportCount" parameterType="com.stomato.form.ReportFormParam" resultType="int">
		select count(1) from (select 1
		from t_report_monthly as a inner join t_apps as b on a.app_id = b.id 
		where a.uid=#{uid}
		<if test="appId != 0">
	     	and app_id = #{appId}
	    </if>
		<if test="startDate != null">
            and a.idate between concat(#{startDate}, ' 00:00:00') and concat(#{endDate}, ' 23:59:59')
        </if>
		 group by a.idate,a.app_id) as report
	</select>
</mapper>